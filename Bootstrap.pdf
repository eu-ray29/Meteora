O que é Bootstrap ?

Kit de ferramentas frontend poderoso, extensível e repleto de recursos. Construir e personalizar com Sass, utilizar grade pré-construída sistema e componentes, e dê vida aos projetos com poderosos plugins JavaScript.


Padrões de design.

Codar em menos tempo.

Botão com:

_Bootstrap 

<button type='button" class="bnt bnt-primary">Botão</button>


Css 

.botao {
    border: none;
    color: white;
    background-color: #0d6efd;
    padding: 7px 12px;
    border-radius: 5px;
    cursor: pointer;
    align-self: center;
}

.botao:hover {
    background-color: #0d6efd;
}


Bootstrap é feito de {Less}, basicamente o Bootstrap é css puro.

Less é compilador de código css

Criação do Bootstrap


O Bootstrap foi criado pelo Designer Mark Otto, e pelo Desenvolvedor de Software Jacob Thorton em 2010.

A ideia por trás dessa ferramenta, era tornar mais prática a implementação de padrões de layout das páginas do Twitter.

Em outubro de 2010, ocorreu a primeira Hack Week, que é um evento interno do Twitter, onde os seus colaboradores promovem ideias de projetos na área de tecnologia. Nessa primeira edição do evento, o Bootstrap foi apresentado e foi um sucesso.

Inicialmente, o Bootstrap se chamava Twitter Blueprint, e foi recebendo colaboração das pessoas desenvolvedoras do Twitter, sendo utilizado como uma ferramenta interna da empresa. E em Agosto de 2011, foi lançado o projeto com código aberto, com o nome de Bootstrap from Twitter. A partir daí recebeu mais colaboração de pessoas desenvolvedoras do mundo todo, e se tornou o Framework CSS mais popular do mundo!




Resumão de espaçamento no Bootstrap 5

O Bootstrap inclui uma ampla variedade de utilitários destinados ao espaçamento, que podem ser aplicados em todos os pontos de quebra (sm, md, lg, xl e xxl).

Para aplicar a classe de espaçamento é bem simples, basta seguir a regra do tipo + direção + valor. Mas calma, vamos olhar cada um em detalhes!

Tipo

O tipo do espaçamento indica se aquele valor que está sendo aplicado é referente ao margin ou ao padding, que são representados na classe pelas letras m e p, respectivamente.

Direção

Uma outra informação importante que compõe a classe é pra qual lado esse espaçamento será aplicado, temos algumas opções.

t significa top ou topo e é aplicado superiormente
b vem de bottom e é aplicado abaixo ou inferiormente
s vem de start e se refere ao left ou lado esquerdo do elemento
evem de end e se refere ao right ou lado direito do elemento
x do eixo x ou horizontal, é aplicado à esquerda e direita do elemento
y do eixo y ou vertical, é aplicado acima e abaixo do elemento
blank aplica em todos os 4 lados do elemento
Valor
Por último, só ficou faltando dizer qual o valor que será aplicado de espaçamento, o que varia de 0 até 5 e é utilizado o rem como unidade de medida padrão.

0 elimina o espaçamento já definido
1 ou 0.25rem
2 ou 0.5rem
3ou 1rem
4 ou 1.5rem
5 ou 3rem
auto calcula automaticamente um valor para a propriedade margin ou m.
Um ponto interessante, é que ocorre um cálculo em que a variável Sass $spacer é multiplicada ao valor em rem da classe. Por exemplo, o 1 corresponde ao valor $spacer * 0.25 e isso irá ocorrer para todos os outros. Com isso, é possível modificar o valor da variável para outro valor a ser multiplicado e caso não aconteça, irá seguir o valor padrão em rem.

Resultado final
Com esses três parâmetros a classe de espaçamento está pronta para ser utilizada, veja um exemplo abaixo.


Manual do Flex no Bootstrap 5

Flex Container

Use d-flex e d-inline-flex: para criar um container flexbox comum ou em linha e transformar os elementos filhos diretos em itens flexíveis.

Modificando a direção

O padrão de direção no flex é row ou linha, então ao utilizar o Bootstrap e aplicar a classe d-flex, por padrão a classe flex-row também é aplicada. Utilize flex-column para definir uma direção vertical.

Alinhamento dos itens e da caixa
Itens Flexíveis

Justificando no eixo principal (eixo x por padrão e eixo y no flex-column )
Use a classe justify-content- e em seguida aplique uma das direções que gostaria de alinhar, como por exemplo start, end, center, between, around ou evenly.

Alinhando no eixo cruzado (eixo y por padrão e eixo x no flex-column )
Use a classe align-items- e assim como anteriormente, aplique uma das direções que gostaria de alinhar, como start, end, center, baseline ou stretch. Essa propriedade alinha de uma vez só todos os itens.

Caso você queira alinhar apenas 1 item flexível, você pode aplicar a classe diretamente nesse elemento e ao invés de align-items- ficará align-self-

O container

Para alinhar a caixa do Flexbox em si, utilize a classe align-content-, somada a direção que gostaria de aplicar, ou seja, start, end, center, between, around ou stretch.

Capacidade de encolher e expandir

Para fazer com que um um item flexível tenha a capacidade de crescer para preencher o espaço disponível, utilize o utilitário flex-grow-, por exemplo, com flex-grow-1 o elemento usa todo o espaço disponível, enquanto permite que os outros itens flexíveis ocupem o espaço restante.

E quando há a necessidade de fazer com que um item flexível encolha para que outro item tenha espaço, utiliza-se a classe flex-shrink- e o valor.

Quebrando de linha

O padrão no flex é a ausência de quebra de linha, então ao utilizar o Bootstrap e aplicar a classe d-flex, por padrão a classe flex-nowrap também é aplicada. Caso queira que após os elementos filhos ocuparem a largura total do container, ocorra a quebra para linha de baixo, utilize o utilitário flex-wrap.

Ordenando itens

É possível alterar a ordem visual de itens flexíveis específicos com a propriedade order do CSS, no bootstrap o utilitário também leva o mesmo nome que a propriedade somado ao valor inteiro de 0 a 5, exemplo: order-3.


